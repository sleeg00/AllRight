plugins {
	id 'org.springframework.boot' version '2.6.14-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	all {
		//logback과의 충돌 방지
		exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	//implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'
	implementation 'javax.servlet:jstl:1.2'
	implementation('org.springframework.boot:spring-boot-devtools')
	implementation 'mysql:mysql-connector-java'
	implementation 'org.jetbrains:annotations:20.1.0'
	implementation 'org.springframework.boot:spring-boot-starter-log4j2'
	implementation 'org.jetbrains:annotations:20.1.0'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	//lombok 라이브러리 추가 끝

	implementation ('org.springframework.boot:spring-boot-starter-mustache')
	runtimeOnly 'com.h2database:h2'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'



	//Mapper LoomBook보다 무조건 뒤에 놔둬야 함
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	//

	//JUnit4 추가
	testImplementation ("org.junit.vintage:junit-vintage-engine"){
		exclude group: 'org.hamcrest', module: "hamcrest-core"
	}
	//

}

test{
	useJUnitPlatform()
}
tasks.named('test') {
	useJUnitPlatform()
}
